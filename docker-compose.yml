services:
  # PostgreSQL Database
  postgres:
    image: postgres:17
    container_name: telegram-bot-postgres
    environment:
      POSTGRES_DB: telegram_bot_manager
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ifpb
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - bot-network
    restart: always

  # pgAdmin4 for database management
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: telegram-bot-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@telegram-bot.com
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: "False"
      PGADMIN_CONFIG_WTF_CSRF_SECRET_KEY: "'telegram-bot-pgadmin-secret-key-2025'"
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: "False"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    ports:
      - "8080:80"
    networks:
      - bot-network
    restart: always
    depends_on:
      - postgres

  # Main Application
  telegram-bot-manager:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: telegram-bot-app
    volumes:
      - ./src:/app/src
      - ./config:/app/config
      - ./requirements.txt:/app/requirements.txt
    env_file:
      - ./src/.env
    environment:
      - DATABASE_URL=postgresql://utmify_db_user:sG1j21EC5VMC5GVUnpTWxXlwRtZdo2EH@dpg-d2ae35uuk2gs739vkusg-a.oregon-postgres.render.com/utmify_db
      - SECRET_KEY=sua-chave-secreta-muito-forte-aqui-123
      - FLASK_ENV=production
    ports:
      - "5000:5000"
    networks:
      - bot-network
    restart: always
    depends_on:
      - postgres

volumes:
  postgres_data:
  pgadmin_data:

networks:
  bot-network:
    driver: bridge
